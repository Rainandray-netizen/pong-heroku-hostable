{"version":3,"sources":["src/settings.js","src/partials/Board.js","src/partials/Paddle.js","src/partials/Ball.js","src/partials/Score.js","src/partials/Game.js","src/index.js"],"names":["SVG_NS","KEYS","w","s","up","down","spaceBar","Board","width","height","svg","rect","document","createElementNS","setAttributeNS","line","appendChild","Paddle","boardHeight","x","y","speed","score","addEventListener","event","key","Math","max","min","Ball","boardWidth","radius","direction","ping","Audio","pingSound","reset","vy","floor","random","vx","abs","player1","player2","paddle","coordinates","leftX","rightX","topY","bottomY","play","hitLeft","hitRight","hitTop","hitBottom","playerWhoScored","otherPlayer","console","log","alert","location","reload","wallCollision","paddleCollision","ball","rightGoal","leftGoal","goal","Score","size","text","textContent","Game","element","pause","music","Music","gameElement","getElementById","board","ballRadius","paddleWidth","paddleHeight","boardGap","score1","score2","classList","add","innerHTML","render","game","gameLoop","requestAnimationFrame"],"mappings":";;;AAEO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,QAAA,YAAA,EAFA,IAAMA,EAAS,6BAEf,QAAA,OAAA,EAAA,IAAMC,EAAO,CAClBC,EAAG,IACHC,EAAG,IACHC,GAAI,UACJC,KAAM,YACNC,SAAU,KALL,QAAA,KAAA;;AC0BJ,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA5BH,IAAA,EAAA,QAAA,kBA4BG,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA1BkBC,IAAAA,EAAAA,WACPC,SAAAA,EAAAA,EAAOC,GAAQ,EAAA,KAAA,GACpBD,KAAAA,MAAQA,EACRC,KAAAA,OAASA,EAuBf,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SApBMC,MAAAA,SAAAA,GACDC,IAAAA,EAAOC,SAASC,gBAAgBb,EAAzB,OAAiC,QAE5CW,EAAKG,eAAe,KAAM,QAAS,KAAKN,OACxCG,EAAKG,eAAe,KAAM,SAAU,KAAKL,QACzCE,EAAKG,eAAe,KAAM,OAAQ,WAClCH,EAAKG,eAAe,KAAM,eAAgB,OAEtCC,IAAAA,EAAOH,SAASC,gBAAgBb,EAAzB,OAAiC,QAE5Ce,EAAKD,eAAe,KAAM,KAAM,KAAKN,MAAQ,GAC7CO,EAAKD,eAAe,KAAM,KAAM,GAChCC,EAAKD,eAAe,KAAM,KAAM,KAAKN,MAAQ,GAC7CO,EAAKD,eAAe,KAAM,KAAM,KAAKL,QACrCM,EAAKD,eAAe,KAAM,SAAU,SACpCC,EAAKD,eAAe,KAAM,mBAAoB,UAC9CC,EAAKD,eAAe,KAAM,eAAgB,KAE1CJ,EAAIM,YAAYL,GAChBD,EAAIM,YAAYD,OACjB,EA1BkBR,GA0BlB,QAAA,QAAA;;ACgCA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA5DH,IAAA,EAAA,QAAA,eA4DG,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA1DkBU,IAAAA,EAAAA,WACPC,SAAAA,EAAAA,EAAaV,EAAOC,EAAQU,EAAGC,EAAGhB,EAAIC,GAAM,IAAA,EAAA,KAAA,EAAA,KAAA,GACjDa,KAAAA,YAAcA,EACdV,KAAAA,MAAQA,EACRC,KAAAA,OAASA,EACTU,KAAAA,EAAIA,EACJC,KAAAA,EAAIA,EACJC,KAAAA,MAAQ,GACRC,KAAAA,MAAQ,EACRlB,KAAAA,IAAK,EACLC,KAAAA,MAAO,EAEZO,SAASW,iBAAiB,UAAW,SAAAC,GAC3BA,OAAAA,EAAMC,KACPrB,KAAAA,EACH,EAAKA,IAAK,EACV,MACGC,KAAAA,EACH,EAAKA,MAAO,KAKlBO,SAASW,iBAAiB,QAAS,SAAAC,GACzBA,OAAAA,EAAMC,KACPrB,KAAAA,EACH,EAAKA,IAAK,EACV,MACGC,KAAAA,EACH,EAAKA,MAAO,KA6BnB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,cAvBWc,MAAAA,SAAAA,EAAGC,EAAGZ,EAAOC,GAKhB,MAAA,CAJKU,EACCA,EAAIX,EACNY,EACGA,EAAIX,KAmBnB,CAAA,IAAA,SAfMC,MAAAA,SAAAA,GACD,KAAKN,KACFgB,KAAAA,EAAIM,KAAKC,IAAI,EAAG,KAAKP,EAAI,KAAKC,QAGjC,KAAKhB,OACFe,KAAAA,EAAIM,KAAKE,IAAI,KAAKV,YAAc,KAAKT,OAAQ,KAAKW,EAAI,KAAKC,QAE9DV,IAAAA,EAAOC,SAASC,gBAAgBb,EAAzB,OAAiC,QAC5CW,EAAKG,eAAe,KAAM,QAAS,KAAKN,OACxCG,EAAKG,eAAe,KAAM,SAAU,KAAKL,QACzCE,EAAKG,eAAe,KAAM,IAAK,KAAKK,GACpCR,EAAKG,eAAe,KAAM,IAAK,KAAKM,GACpCT,EAAKG,eAAe,KAAM,OAAQ,UAClCJ,EAAIM,YAAYL,OACjB,EA1DkBM,GA0DlB,QAAA,QAAA;;;;ACmEA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA/HH,IAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,oCA8HG,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,CAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA5HkBY,IAAAA,EAAAA,WACPC,SAAAA,EAAAA,EAAYZ,EAAaa,GAAQ,EAAA,KAAA,GACtCD,KAAAA,WAAaA,EACbZ,KAAAA,YAAcA,EACda,KAAAA,OAASA,EACTC,KAAAA,UAAY,EACZC,KAAAA,KAAO,IAAIC,MAAMC,EAAV,SACPC,KAAAA,QAqHN,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAlHO,MAAA,WAIC,IAHFjB,KAAAA,EAAI,KAAKW,WAAa,EACtBV,KAAAA,EAAI,KAAKF,YAAc,EACvBmB,KAAAA,GAAK,EACS,IAAZ,KAAKA,IACLA,KAAAA,GAAKX,KAAKY,MAAsB,GAAhBZ,KAAKa,SAAgB,GAGvCC,KAAAA,GAAK,KAAKR,WAAa,EAAIN,KAAKe,IAAI,KAAKJ,OA0G/C,CAAA,IAAA,kBAvGeK,MAAAA,SAAAA,EAASC,GACnB,GAAA,KAAKH,GAAK,EAAG,CACXI,IAMiCA,EAAAA,EANxBD,EAAQE,YACnBF,EAAQxB,EACRwB,EAAQvB,EACRuB,EAAQnC,MACRmC,EAAQlC,QALK,GAOVqC,EAPU,EAAA,GAOHC,EAPG,EAAA,GAOKC,EAPL,EAAA,GAOWC,EAPX,EAAA,GASb,KAAK9B,EAAI,KAAKY,QAAUe,GACxB,KAAK3B,EAAI,KAAKY,QAAUgB,GACxB,KAAK3B,GAAK4B,GACV,KAAK5B,GAAK6B,IAELhB,KAAAA,KAAKiB,OACLV,KAAAA,GAAgB,MAAV,KAAKA,QAIf,CACCI,IAMiCA,EAAAA,EANxBF,EAAQG,YACnBH,EAAQvB,EACRuB,EAAQtB,EACRsB,EAAQlC,MACRkC,EAAQjC,QALP,GAOEqC,EAPF,EAAA,GAOSC,EAPT,EAAA,GAOiBC,EAPjB,EAAA,GAOuBC,EAPvB,EAAA,GASD,KAAK9B,EAAI,KAAKY,QAAUe,GACxB,KAAK3B,EAAI,KAAKY,QAAUgB,GACxB,KAAK3B,GAAK4B,GACV,KAAK5B,GAAK6B,IAELhB,KAAAA,KAAKiB,OACLV,KAAAA,GAAgB,MAAV,KAAKA,OAoErB,CAAA,IAAA,gBA/De,MAAA,WACRW,IAAAA,EAAU,KAAKhC,EAAI,KAAKY,QAAU,EAClCqB,EAAW,KAAKjC,EAAI,KAAKY,QAAU,KAAKD,WACxCuB,EAAS,KAAKjC,EAAI,KAAKW,QAAU,EACjCuB,EAAY,KAAKlC,EAAI,KAAKW,QAAU,KAAKb,YAC3CiC,GAAWC,EACRZ,KAAAA,IAAM,KAAKA,IACPa,GAAUC,KACdjB,KAAAA,IAAM,KAAKA,MAuDnB,CAAA,IAAA,OAnDIkB,MAAAA,SAAAA,EAAiBC,GACpBD,EAAgBjC,QAChBmC,QAAQC,IAAIH,EAAgBjC,OAEE,IAA1BiC,EAAgBjC,QAClBiC,EAAgB9C,OAAS8C,EAAgB9C,OAAS,IAEtB,KAA1B8C,EAAgBjC,QAClBiC,EAAgB9C,OAAS8C,EAAgB9C,OAAS,IAEhD+C,EAAYlC,OAAS,IAAgC,KAA1BiC,EAAgBjC,QAC7CkC,EAAY/C,OAAS+C,EAAY/C,OAAS,GAC1C8C,EAAgB9C,OAAS8C,EAAgB9C,OAAS,IAEtB,KAA1B8C,EAAgBjC,OAAsC,KAAtBiC,EAAgBpC,GAClDwC,MAAM,4DACNC,SAASC,UAC0B,KAA1BN,EAAgBjC,OAAsC,KAAtBiC,EAAgBpC,IACzDwC,MAAM,4DACNC,SAASC,UAGNzB,KAAAA,UA6BN,CAAA,IAAA,SA1BM1B,MAAAA,SAAAA,EAAKgC,EAASC,GACdxB,KAAAA,GAAK,KAAKqB,GACVpB,KAAAA,GAAK,KAAKiB,GAEVyB,KAAAA,gBAEAC,KAAAA,gBAAgBrB,EAASC,GAE1BqB,IAAAA,EAAOpD,SAASC,gBAAgBb,EAAzB,OAAiC,UAE5CgE,EAAKlD,eAAe,KAAM,KAAM,KAAKK,GACrC6C,EAAKlD,eAAe,KAAM,KAAM,KAAKM,GACrC4C,EAAKlD,eAAe,KAAM,IAAK,KAAKiB,QACpCiC,EAAKlD,eAAe,KAAM,OAAQ,SAClCJ,EAAIM,YAAYgD,GAEVC,IAAAA,EAAY,KAAK9C,EAAI,KAAKY,QAAU,KAAKD,WACzCoC,EAAW,KAAK/C,EAAI,KAAKY,QAAU,EAErCkC,GACGE,KAAAA,KAAKzB,EAASC,GACdX,KAAAA,UAAY,GACRkC,IACJC,KAAAA,KAAKxB,EAASD,GACdV,KAAAA,WAAa,OAErB,EA5HkBH,GA4HlB,QAAA,QAAA;;AC9GA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAjBH,IAAA,EAAA,QAAA,eAiBG,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAfkBuC,IAAAA,EAAAA,WACPjD,SAAAA,EAAAA,EAAGC,EAAGiD,GAAM,EAAA,KAAA,GACjBlD,KAAAA,EAAIA,EACJC,KAAAA,EAAIA,EACJiD,KAAAA,KAAOA,EAWb,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SATM3D,MAAAA,SAAAA,EAAKY,GACNgD,IAAAA,EAAO1D,SAASC,gBAAgBb,EAAzB,OAAiC,QAC5CsE,EAAKxD,eAAe,KAAM,IAAK,KAAKK,GACpCmD,EAAKxD,eAAe,KAAM,IAAK,KAAKM,GACpCkD,EAAKxD,eAAe,KAAM,cAAe,8BACzCwD,EAAKxD,eAAe,KAAM,YAAa,KAAKuD,MAC5CC,EAAKxD,eAAe,KAAM,OAAQ,SAClCwD,EAAKC,YAAcjD,EACnBZ,EAAIM,YAAYsD,OACjB,EAfkBF,GAelB,QAAA,QAAA;;;;ACwEA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAzFH,IAAA,EAAA,QAAA,kBACA,EAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,cACA,EAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,2CAoFG,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAlFkBI,IAAAA,EAAAA,WACPC,SAAAA,EAAAA,EAASjE,EAAOC,GAAQ,IAAA,EAAA,KAAA,EAAA,KAAA,GAC7BgE,KAAAA,QAAUA,EACVjE,KAAAA,MAAQA,EACRC,KAAAA,OAASA,EACTiE,KAAAA,OAAQ,EACRC,KAAAA,MAAQ,IAAIzC,MAAM0C,EAAV,SAERC,KAAAA,YAAcjE,SAASkE,eAAe,KAAKL,SAE3CM,KAAAA,MAAQ,IAAIxE,EAAJ,QAAU,KAAKC,MAAO,KAAKC,QAEnCuE,KAAAA,WAAa,EAEbhB,KAAAA,KAAO,IAAInC,EAAJ,QAAS,KAAKrB,MAAO,KAAKC,OAAQ,KAAKuE,YAE9CC,KAAAA,YAAc,EACdC,KAAAA,aAAe,GACfC,KAAAA,SAAW,GAEXzC,KAAAA,QAAU,IAAIzB,EAAJ,QACb,KAAKR,OACL,KAAKwE,YACL,KAAKC,aACL,KAAKC,UACJ,KAAK1E,OAAS,KAAKyE,cAAgB,EACpCjF,EAAKC,KAAAA,EACLD,EAAKE,KAAAA,GAEFwC,KAAAA,QAAU,IAAI1B,EAAJ,QACb,KAAKR,OACL,KAAKwE,YACL,KAAKC,aACL,KAAK1E,MAAQ,KAAK2E,SAAW,KAAKF,aACjC,KAAKxE,OAAS,KAAKyE,cAAgB,EACpCjF,EAAKG,KAAAA,GACLH,EAAKI,KAAAA,MAGF+E,KAAAA,OAAS,IAAIhB,EAAJ,QAAU,KAAK5D,MAAQ,EAAI,GAAI,GAAI,IAE5C6E,KAAAA,OAAS,IAAIjB,EAAJ,QAAU,KAAK5D,MAAQ,EAAI,GAAI,GAAI,IAEjDI,SAASW,iBAAiB,UAAW,SAAAC,GAC3BA,OAAAA,EAAMC,KACPxB,KAAAA,EAAKK,KAAAA,SACR,EAAKoE,OAAS,EAAKA,MACnB,EAAKhC,QAAQrB,MAAQ,GACrB,EAAKsB,QAAQtB,MAAQ,GACrB,EAAKsD,MAAMzB,OAEQtC,SAASkE,eAAe,cAC9BQ,UAAUC,IAAI,WA8BlC,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SAxBQ,MAAA,WACH,GAAA,KAAKb,MAIP,OAHKhC,KAAAA,QAAQrB,MAAQ,EAChBsB,KAAAA,QAAQtB,MAAQ,OAChBsD,KAAAA,MAAMD,QAIRG,KAAAA,YAAYW,UAAY,GAEzB9E,IAAAA,EAAME,SAASC,gBAAgBb,EAAzB,OAAiC,OAC3CU,EAAII,eAAe,KAAM,QAAS,KAAKN,OACvCE,EAAII,eAAe,KAAM,SAAU,KAAKL,QACnCoE,KAAAA,YAAY7D,YAAYN,GAExBqE,KAAAA,MAAMU,OAAO/E,GAEbgC,KAAAA,QAAQ+C,OAAO/E,GACfiC,KAAAA,QAAQ8C,OAAO/E,GAEfsD,KAAAA,KAAKyB,OAAO/E,EAAK,KAAKgC,QAAS,KAAKC,SAEpCyC,KAAAA,OAAOK,OAAO/E,EAAK,KAAKgC,QAAQpB,OAChC+D,KAAAA,OAAOI,OAAO/E,EAAK,KAAKiC,QAAQrB,WACtC,EAlFkBkD,GAkFlB,QAAA,QAAA;;ACnFH,aANA,QAAA,qBACA,IAAA,EAAA,EAAA,QAAA,oBAKA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAFA,IAAMkB,EAAO,IAAIlB,EAAJ,QAAS,OAAQ,IAAK,MAEnC,SAAUmB,IACRD,EAAKD,SACLG,sBAAsBD,GAFxB","file":"src.6cab4362.js","sourceRoot":"..","sourcesContent":["export const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nexport const KEYS = {\n  w: \"w\",\n  s: \"s\",\n  up: \"ArrowUp\",\n  down: \"ArrowDown\",\n  spaceBar: \" \"\n};\n","import { SVG_NS } from \"../settings.js\";\n\nexport default class Board {\n  constructor(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  render(svg) {\n    let rect = document.createElementNS(SVG_NS, \"rect\");\n\n    rect.setAttributeNS(null, \"width\", this.width);\n    rect.setAttributeNS(null, \"height\", this.height);\n    rect.setAttributeNS(null, \"fill\", \"#353535\");\n    rect.setAttributeNS(null, \"fill-opacity\", \"0.5\");\n\n    let line = document.createElementNS(SVG_NS, \"line\");\n\n    line.setAttributeNS(null, \"x1\", this.width / 2);\n    line.setAttributeNS(null, \"y1\", 0);\n    line.setAttributeNS(null, \"x2\", this.width / 2);\n    line.setAttributeNS(null, \"y2\", this.height);\n    line.setAttributeNS(null, \"stroke\", \"white\");\n    line.setAttributeNS(null, \"stroke-dasharray\", \"20, 15\");\n    line.setAttributeNS(null, \"stroke-width\", \"4\");\n\n    svg.appendChild(rect);\n    svg.appendChild(line);\n  }\n}\n","import { SVG_NS } from \"../settings\";\n\nexport default class Paddle {\n  constructor(boardHeight, width, height, x, y, up, down) {\n    this.boardHeight = boardHeight;\n    this.width = width;\n    this.height = height;\n    this.x = x;\n    this.y = y;\n    this.speed = 10;\n    this.score = 0;\n    this.up = false;\n    this.down = false;\n\n    document.addEventListener(\"keydown\", event => {\n      switch (event.key) {\n        case up:\n          this.up = true;\n          break;\n        case down:\n          this.down = true;\n          break;\n      }\n    });\n\n    document.addEventListener(\"keyup\", event => {\n      switch (event.key) {\n        case up:\n          this.up = false;\n          break;\n        case down:\n          this.down = false;\n          break;\n      }\n    });\n  }\n\n  coordinates(x, y, width, height) {\n    let leftX = x;\n    let rightX = x + width;\n    let topY = y;\n    let bottomY = y + height;\n    return [leftX, rightX, topY, bottomY];\n  }\n\n  render(svg) {\n    if (this.up) {\n      this.y = Math.max(0, this.y - this.speed);\n    }\n\n    if (this.down) {\n      this.y = Math.min(this.boardHeight - this.height, this.y + this.speed);\n    }\n    let rect = document.createElementNS(SVG_NS, \"rect\");\n    rect.setAttributeNS(null, \"width\", this.width);\n    rect.setAttributeNS(null, \"height\", this.height);\n    rect.setAttributeNS(null, \"x\", this.x);\n    rect.setAttributeNS(null, \"y\", this.y);\n    rect.setAttributeNS(null, \"fill\", \"maroon\");\n    svg.appendChild(rect);\n  }\n}\n","import { SVG_NS } from \"../settings\";\nimport pingSound from \"../../public/sounds/pong-02.wav\";\n\nexport default class Ball {\n  constructor(boardWidth, boardHeight, radius) {\n    this.boardWidth = boardWidth;\n    this.boardHeight = boardHeight;\n    this.radius = radius;\n    this.direction = 1;\n    this.ping = new Audio(pingSound);\n    this.reset();\n  }\n\n  reset() {\n    this.x = this.boardWidth / 2;\n    this.y = this.boardHeight / 2;\n    this.vy = 0;\n    while (this.vy === 0) {\n      this.vy = Math.floor(Math.random() * 10 - 5);\n    }\n\n    this.vx = this.direction * (6 - Math.abs(this.vy));\n  }\n\n  paddleCollision(player1, player2) {\n    if (this.vx > 0) {\n      let paddle = player2.coordinates(\n        player2.x,\n        player2.y,\n        player2.width,\n        player2.height\n      );\n      let [leftX, rightX, topY, bottomY] = paddle;\n      if (\n        this.x + this.radius >= leftX &&\n        this.x + this.radius <= rightX &&\n        this.y >= topY &&\n        this.y <= bottomY\n      ) {\n        this.ping.play();\n        this.vx = -this.vx * 1.05;\n      }\n    }\n    //else detect paddle of player 1\n    else {\n      let paddle = player1.coordinates(\n        player1.x,\n        player1.y,\n        player1.width,\n        player1.height\n      );\n      let [leftX, rightX, topY, bottomY] = paddle;\n      if (\n        this.x - this.radius >= leftX &&\n        this.x - this.radius <= rightX &&\n        this.y >= topY &&\n        this.y <= bottomY\n      ) {\n        this.ping.play();\n        this.vx = -this.vx * 1.05;\n      }\n    }\n  }\n\n  wallCollision() {\n    const hitLeft = this.x - this.radius <= 0;\n    const hitRight = this.x + this.radius >= this.boardWidth;\n    const hitTop = this.y - this.radius <= 0;\n    const hitBottom = this.y + this.radius >= this.boardHeight;\n    if (hitLeft || hitRight) {\n      this.vx = -this.vx;\n    } else if (hitTop || hitBottom) {\n      this.vy = -this.vy;\n    }\n  }\n\n  goal(playerWhoScored, otherPlayer) {\n    playerWhoScored.score++;\n    console.log(playerWhoScored.score);\n\n    if (playerWhoScored.score === 5) {\n      playerWhoScored.height = playerWhoScored.height + 20;\n    }\n    if (playerWhoScored.score === 10) {\n      playerWhoScored.height = playerWhoScored.height + 20;\n    }\n    if (otherPlayer.score >= 10 && playerWhoScored.score === 10) {\n      otherPlayer.height = otherPlayer.height - 40;\n      playerWhoScored.height = playerWhoScored.height - 40;\n    }\n    if (playerWhoScored.score === 15 && playerWhoScored.x === 10) {\n      alert(\"Game Over! Player 1 wins! Press 'OK' to return to title.\");\n      location.reload();\n    } else if (playerWhoScored.score === 15 && playerWhoScored.x !== 10) {\n      alert(\"Game Over! Player 2 wins! Press 'OK' to return to title.\");\n      location.reload();\n    }\n\n    this.reset();\n  }\n\n  render(svg, player1, player2) {\n    this.x += this.vx;\n    this.y += this.vy;\n\n    this.wallCollision();\n\n    this.paddleCollision(player1, player2);\n\n    let ball = document.createElementNS(SVG_NS, \"circle\");\n\n    ball.setAttributeNS(null, \"cx\", this.x);\n    ball.setAttributeNS(null, \"cy\", this.y);\n    ball.setAttributeNS(null, \"r\", this.radius);\n    ball.setAttributeNS(null, \"fill\", \"white\");\n    svg.appendChild(ball);\n\n    const rightGoal = this.x + this.radius >= this.boardWidth;\n    const leftGoal = this.x - this.radius <= 0;\n\n    if (rightGoal) {\n      this.goal(player1, player2);\n      this.direction = 1;\n    } else if (leftGoal) {\n      this.goal(player2, player1);\n      this.direction = -1;\n    }\n  }\n}\n","import { SVG_NS } from \"../settings\";\n\nexport default class Score {\n  constructor(x, y, size) {\n    this.x = x;\n    this.y = y;\n    this.size = size;\n  }\n  render(svg, score) {\n    let text = document.createElementNS(SVG_NS, \"text\");\n    text.setAttributeNS(null, \"x\", this.x);\n    text.setAttributeNS(null, \"y\", this.y);\n    text.setAttributeNS(null, \"font-family\", \"'Silkscreen Web', monotype\");\n    text.setAttributeNS(null, \"font-size\", this.size);\n    text.setAttributeNS(null, \"fill\", \"white\");\n    text.textContent = score;\n    svg.appendChild(text);\n  }\n}\n","import { SVG_NS, KEYS } from \"../settings.js\";\nimport Board from \"./Board.js\";\nimport Paddle from \"./Paddle.js\";\nimport Ball from \"./Ball.js\";\nimport Score from \"./Score.js\";\nimport Music from \"../../public/sounds/passing-breeze.mp3\";\n\nexport default class Game {\n  constructor(element, width, height) {\n    this.element = element;\n    this.width = width;\n    this.height = height;\n    this.pause = true;\n    this.music = new Audio(Music);\n\n    this.gameElement = document.getElementById(this.element);\n\n    this.board = new Board(this.width, this.height);\n\n    this.ballRadius = 8;\n\n    this.ball = new Ball(this.width, this.height, this.ballRadius);\n\n    this.paddleWidth = 8;\n    this.paddleHeight = 56;\n    this.boardGap = 10;\n\n    this.player1 = new Paddle(\n      this.height,\n      this.paddleWidth,\n      this.paddleHeight,\n      this.boardGap,\n      (this.height - this.paddleHeight) / 2,\n      KEYS.w,\n      KEYS.s\n    );\n    this.player2 = new Paddle(\n      this.height,\n      this.paddleWidth,\n      this.paddleHeight,\n      this.width - this.boardGap - this.paddleWidth,\n      (this.height - this.paddleHeight) / 2,\n      KEYS.up,\n      KEYS.down\n    );\n\n    this.score1 = new Score(this.width / 2 - 50, 30, 30); //-50 , -235\n\n    this.score2 = new Score(this.width / 2 + 25, 30, 30); //+25 , +10\n\n    document.addEventListener(\"keydown\", event => {\n      switch (event.key) {\n        case KEYS.spaceBar:\n          this.pause = !this.pause;\n          this.player1.speed = 10;\n          this.player2.speed = 10;\n          this.music.play();\n\n          let startMessage = document.getElementById(\"start-game\");\n          startMessage.classList.add(\"hide\");\n          break;\n      }\n    });\n  }\n\n  render() {\n    if (this.pause) {\n      this.player1.speed = 0;\n      this.player2.speed = 0;\n      this.music.pause();\n      return;\n    }\n\n    this.gameElement.innerHTML = \"\";\n\n    let svg = document.createElementNS(SVG_NS, \"svg\");\n    svg.setAttributeNS(null, \"width\", this.width);\n    svg.setAttributeNS(null, \"height\", this.height);\n    this.gameElement.appendChild(svg);\n\n    this.board.render(svg);\n\n    this.player1.render(svg);\n    this.player2.render(svg);\n\n    this.ball.render(svg, this.player1, this.player2);\n\n    this.score1.render(svg, this.player1.score); //`Player 1 - ${this.player1.score}`\n    this.score2.render(svg, this.player2.score); //`${this.player2.score} - Player 2`\n  }\n}\n","import \"./styles/game.css\";\nimport Game from \"./partials/Game\";\n\n// create a game instance\nconst game = new Game(\"game\", 512, 256);\n\n(function gameLoop() {\n  game.render();\n  requestAnimationFrame(gameLoop);\n})();\n"]}